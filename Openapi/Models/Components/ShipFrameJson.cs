
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Openapi.Models.Components
{
    using Newtonsoft.Json;
    using System;
    using UnityEngine;
    
    /// <summary>
    /// The frame of the ship. The frame determines the number of modules and mounting points of the ship, as well as base fuel capacity. As the condition of the frame takes more wear, the ship will become more sluggish and less maneuverable.
    /// </summary>
    [Serializable]
    public class ShipFrameJson
    {

        /// <summary>
        /// Symbol of the frame.
        /// </summary>
        [SerializeField]
        [JsonProperty("symbol")]
        public Symbol Symbol { get; set; } = default!;
        

        /// <summary>
        /// Name of the frame.
        /// </summary>
        [SerializeField]
        [JsonProperty("name")]
        public string Name { get; set; } = default!;
        

        /// <summary>
        /// Description of the frame.
        /// </summary>
        [SerializeField]
        [JsonProperty("description")]
        public string Description { get; set; } = default!;
        

        /// <summary>
        /// The repairable condition of a component. A value of 0 indicates the component needs significant repairs, while a value of 1 indicates the component is in near perfect condition. As the condition of a component is repaired, the overall integrity of the component decreases.
        /// </summary>
        [SerializeField]
        [JsonProperty("condition")]
        public double Condition { get; set; } = default!;
        

        /// <summary>
        /// The overall integrity of the component, which determines the performance of the component. A value of 0 indicates that the component is almost completely degraded, while a value of 1 indicates that the component is in near perfect condition. The integrity of the component is non-repairable, and represents permanent wear over time.
        /// </summary>
        [SerializeField]
        [JsonProperty("integrity")]
        public double Integrity { get; set; } = default!;
        

        /// <summary>
        /// The amount of slots that can be dedicated to modules installed in the ship. Each installed module take up a number of slots, and once there are no more slots, no new modules can be installed.
        /// </summary>
        [SerializeField]
        [JsonProperty("moduleSlots")]
        public long ModuleSlots { get; set; } = default!;
        

        /// <summary>
        /// The amount of slots that can be dedicated to mounts installed in the ship. Each installed mount takes up a number of points, and once there are no more points remaining, no new mounts can be installed.
        /// </summary>
        [SerializeField]
        [JsonProperty("mountingPoints")]
        public long MountingPoints { get; set; } = default!;
        

        /// <summary>
        /// The maximum amount of fuel that can be stored in this ship. When refueling, the ship will be refueled to this amount.
        /// </summary>
        [SerializeField]
        [JsonProperty("fuelCapacity")]
        public long FuelCapacity { get; set; } = default!;
        

        /// <summary>
        /// The requirements for installation on a ship
        /// </summary>
        [SerializeField]
        [JsonProperty("requirements")]
        public ShipRequirementsJson Requirements { get; set; } = default!;
        
    }
}