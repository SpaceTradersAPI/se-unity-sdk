
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Openapi.Models.Components
{
    using Newtonsoft.Json;
    using System;
    using UnityEngine;
    
    /// <summary>
    /// The registered role of the ship
    /// </summary>
    public enum ShipRoleJson
    {
        [JsonProperty("FABRICATOR")]
        Fabricator,
        [JsonProperty("HARVESTER")]
        Harvester,
        [JsonProperty("HAULER")]
        Hauler,
        [JsonProperty("INTERCEPTOR")]
        Interceptor,
        [JsonProperty("EXCAVATOR")]
        Excavator,
        [JsonProperty("TRANSPORT")]
        Transport,
        [JsonProperty("REPAIR")]
        Repair,
        [JsonProperty("SURVEYOR")]
        Surveyor,
        [JsonProperty("COMMAND")]
        Command,
        [JsonProperty("CARRIER")]
        Carrier,
        [JsonProperty("PATROL")]
        Patrol,
        [JsonProperty("SATELLITE")]
        Satellite,
        [JsonProperty("EXPLORER")]
        Explorer,
        [JsonProperty("REFINERY")]
        Refinery,
    }

    public static class ShipRoleJsonExtension
    {
        public static string Value(this ShipRoleJson value)
        {
            return ((JsonPropertyAttribute)value.GetType().GetMember(value.ToString())[0].GetCustomAttributes(typeof(JsonPropertyAttribute), false)[0]).PropertyName ?? value.ToString();
        }

        public static ShipRoleJson ToEnum(this string value)
        {
            foreach(var field in typeof(ShipRoleJson).GetFields())
            {
                var attributes = field.GetCustomAttributes(typeof(JsonPropertyAttribute), false);
                if (attributes.Length == 0)
                {
                    continue;
                }

                var attribute = attributes[0] as JsonPropertyAttribute;
                if (attribute != null && attribute.PropertyName == value)
                {
                    return (ShipRoleJson)field.GetValue(null);
                }
            }

            throw new Exception($"Unknown value {value} for enum ShipRoleJson");
        }
    }

}