
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Openapi.Models.Components
{
    using Newtonsoft.Json;
    using System;
    using UnityEngine;
    
    /// <summary>
    /// Type of ship
    /// </summary>
    public enum ShipTypeJsonShipTypeJson
    {
        [JsonProperty("SHIP_PROBE")]
        ShipProbe,
        [JsonProperty("SHIP_MINING_DRONE")]
        ShipMiningDrone,
        [JsonProperty("SHIP_SIPHON_DRONE")]
        ShipSiphonDrone,
        [JsonProperty("SHIP_INTERCEPTOR")]
        ShipInterceptor,
        [JsonProperty("SHIP_LIGHT_HAULER")]
        ShipLightHauler,
        [JsonProperty("SHIP_COMMAND_FRIGATE")]
        ShipCommandFrigate,
        [JsonProperty("SHIP_EXPLORER")]
        ShipExplorer,
        [JsonProperty("SHIP_HEAVY_FREIGHTER")]
        ShipHeavyFreighter,
        [JsonProperty("SHIP_LIGHT_SHUTTLE")]
        ShipLightShuttle,
        [JsonProperty("SHIP_ORE_HOUND")]
        ShipOreHound,
        [JsonProperty("SHIP_REFINING_FREIGHTER")]
        ShipRefiningFreighter,
        [JsonProperty("SHIP_SURVEYOR")]
        ShipSurveyor,
    }

    public static class ShipTypeJsonShipTypeJsonExtension
    {
        public static string Value(this ShipTypeJsonShipTypeJson value)
        {
            return ((JsonPropertyAttribute)value.GetType().GetMember(value.ToString())[0].GetCustomAttributes(typeof(JsonPropertyAttribute), false)[0]).PropertyName ?? value.ToString();
        }

        public static ShipTypeJsonShipTypeJson ToEnum(this string value)
        {
            foreach(var field in typeof(ShipTypeJsonShipTypeJson).GetFields())
            {
                var attributes = field.GetCustomAttributes(typeof(JsonPropertyAttribute), false);
                if (attributes.Length == 0)
                {
                    continue;
                }

                var attribute = attributes[0] as JsonPropertyAttribute;
                if (attribute != null && attribute.PropertyName == value)
                {
                    return (ShipTypeJsonShipTypeJson)field.GetValue(null);
                }
            }

            throw new Exception($"Unknown value {value} for enum ShipTypeJsonShipTypeJson");
        }
    }

}