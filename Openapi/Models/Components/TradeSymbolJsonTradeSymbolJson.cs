
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Openapi.Models.Components
{
    using Newtonsoft.Json;
    using System;
    using UnityEngine;
    
    /// <summary>
    /// The good&apos;s symbol.
    /// </summary>
    public enum TradeSymbolJsonTradeSymbolJson
    {
        [JsonProperty("PRECIOUS_STONES")]
        PreciousStones,
        [JsonProperty("QUARTZ_SAND")]
        QuartzSand,
        [JsonProperty("SILICON_CRYSTALS")]
        SiliconCrystals,
        [JsonProperty("AMMONIA_ICE")]
        AmmoniaIce,
        [JsonProperty("LIQUID_HYDROGEN")]
        LiquidHydrogen,
        [JsonProperty("LIQUID_NITROGEN")]
        LiquidNitrogen,
        [JsonProperty("ICE_WATER")]
        IceWater,
        [JsonProperty("EXOTIC_MATTER")]
        ExoticMatter,
        [JsonProperty("ADVANCED_CIRCUITRY")]
        AdvancedCircuitry,
        [JsonProperty("GRAVITON_EMITTERS")]
        GravitonEmitters,
        [JsonProperty("IRON")]
        Iron,
        [JsonProperty("IRON_ORE")]
        IronOre,
        [JsonProperty("COPPER")]
        Copper,
        [JsonProperty("COPPER_ORE")]
        CopperOre,
        [JsonProperty("ALUMINUM")]
        Aluminum,
        [JsonProperty("ALUMINUM_ORE")]
        AluminumOre,
        [JsonProperty("SILVER")]
        Silver,
        [JsonProperty("SILVER_ORE")]
        SilverOre,
        [JsonProperty("GOLD")]
        Gold,
        [JsonProperty("GOLD_ORE")]
        GoldOre,
        [JsonProperty("PLATINUM")]
        Platinum,
        [JsonProperty("PLATINUM_ORE")]
        PlatinumOre,
        [JsonProperty("DIAMONDS")]
        Diamonds,
        [JsonProperty("URANITE")]
        Uranite,
        [JsonProperty("URANITE_ORE")]
        UraniteOre,
        [JsonProperty("MERITIUM")]
        Meritium,
        [JsonProperty("MERITIUM_ORE")]
        MeritiumOre,
        [JsonProperty("HYDROCARBON")]
        Hydrocarbon,
        [JsonProperty("ANTIMATTER")]
        Antimatter,
        [JsonProperty("FAB_MATS")]
        FabMats,
        [JsonProperty("FERTILIZERS")]
        Fertilizers,
        [JsonProperty("FABRICS")]
        Fabrics,
        [JsonProperty("FOOD")]
        Food,
        [JsonProperty("JEWELRY")]
        Jewelry,
        [JsonProperty("MACHINERY")]
        Machinery,
        [JsonProperty("FIREARMS")]
        Firearms,
        [JsonProperty("ASSAULT_RIFLES")]
        AssaultRifles,
        [JsonProperty("MILITARY_EQUIPMENT")]
        MilitaryEquipment,
        [JsonProperty("EXPLOSIVES")]
        Explosives,
        [JsonProperty("LAB_INSTRUMENTS")]
        LabInstruments,
        [JsonProperty("AMMUNITION")]
        Ammunition,
        [JsonProperty("ELECTRONICS")]
        Electronics,
        [JsonProperty("SHIP_PLATING")]
        ShipPlating,
        [JsonProperty("SHIP_PARTS")]
        ShipParts,
        [JsonProperty("EQUIPMENT")]
        Equipment,
        [JsonProperty("FUEL")]
        Fuel,
        [JsonProperty("MEDICINE")]
        Medicine,
        [JsonProperty("DRUGS")]
        Drugs,
        [JsonProperty("CLOTHING")]
        Clothing,
        [JsonProperty("MICROPROCESSORS")]
        Microprocessors,
        [JsonProperty("PLASTICS")]
        Plastics,
        [JsonProperty("POLYNUCLEOTIDES")]
        Polynucleotides,
        [JsonProperty("BIOCOMPOSITES")]
        Biocomposites,
        [JsonProperty("QUANTUM_STABILIZERS")]
        QuantumStabilizers,
        [JsonProperty("NANOBOTS")]
        Nanobots,
        [JsonProperty("AI_MAINFRAMES")]
        AiMainframes,
        [JsonProperty("QUANTUM_DRIVES")]
        QuantumDrives,
        [JsonProperty("ROBOTIC_DRONES")]
        RoboticDrones,
        [JsonProperty("CYBER_IMPLANTS")]
        CyberImplants,
        [JsonProperty("GENE_THERAPEUTICS")]
        GeneTherapeutics,
        [JsonProperty("NEURAL_CHIPS")]
        NeuralChips,
        [JsonProperty("MOOD_REGULATORS")]
        MoodRegulators,
        [JsonProperty("VIRAL_AGENTS")]
        ViralAgents,
        [JsonProperty("MICRO_FUSION_GENERATORS")]
        MicroFusionGenerators,
        [JsonProperty("SUPERGRAINS")]
        Supergrains,
        [JsonProperty("LASER_RIFLES")]
        LaserRifles,
        [JsonProperty("HOLOGRAPHICS")]
        Holographics,
        [JsonProperty("SHIP_SALVAGE")]
        ShipSalvage,
        [JsonProperty("RELIC_TECH")]
        RelicTech,
        [JsonProperty("NOVEL_LIFEFORMS")]
        NovelLifeforms,
        [JsonProperty("BOTANICAL_SPECIMENS")]
        BotanicalSpecimens,
        [JsonProperty("CULTURAL_ARTIFACTS")]
        CulturalArtifacts,
        [JsonProperty("FRAME_PROBE")]
        FrameProbe,
        [JsonProperty("FRAME_DRONE")]
        FrameDrone,
        [JsonProperty("FRAME_INTERCEPTOR")]
        FrameInterceptor,
        [JsonProperty("FRAME_RACER")]
        FrameRacer,
        [JsonProperty("FRAME_FIGHTER")]
        FrameFighter,
        [JsonProperty("FRAME_FRIGATE")]
        FrameFrigate,
        [JsonProperty("FRAME_SHUTTLE")]
        FrameShuttle,
        [JsonProperty("FRAME_EXPLORER")]
        FrameExplorer,
        [JsonProperty("FRAME_MINER")]
        FrameMiner,
        [JsonProperty("FRAME_LIGHT_FREIGHTER")]
        FrameLightFreighter,
        [JsonProperty("FRAME_HEAVY_FREIGHTER")]
        FrameHeavyFreighter,
        [JsonProperty("FRAME_TRANSPORT")]
        FrameTransport,
        [JsonProperty("FRAME_DESTROYER")]
        FrameDestroyer,
        [JsonProperty("FRAME_CRUISER")]
        FrameCruiser,
        [JsonProperty("FRAME_CARRIER")]
        FrameCarrier,
        [JsonProperty("REACTOR_SOLAR_I")]
        ReactorSolarI,
        [JsonProperty("REACTOR_FUSION_I")]
        ReactorFusionI,
        [JsonProperty("REACTOR_FISSION_I")]
        ReactorFissionI,
        [JsonProperty("REACTOR_CHEMICAL_I")]
        ReactorChemicalI,
        [JsonProperty("REACTOR_ANTIMATTER_I")]
        ReactorAntimatterI,
        [JsonProperty("ENGINE_IMPULSE_DRIVE_I")]
        EngineImpulseDriveI,
        [JsonProperty("ENGINE_ION_DRIVE_I")]
        EngineIonDriveI,
        [JsonProperty("ENGINE_ION_DRIVE_II")]
        EngineIonDriveIi,
        [JsonProperty("ENGINE_HYPER_DRIVE_I")]
        EngineHyperDriveI,
        [JsonProperty("MODULE_MINERAL_PROCESSOR_I")]
        ModuleMineralProcessorI,
        [JsonProperty("MODULE_GAS_PROCESSOR_I")]
        ModuleGasProcessorI,
        [JsonProperty("MODULE_CARGO_HOLD_I")]
        ModuleCargoHoldI,
        [JsonProperty("MODULE_CARGO_HOLD_II")]
        ModuleCargoHoldIi,
        [JsonProperty("MODULE_CARGO_HOLD_III")]
        ModuleCargoHoldIii,
        [JsonProperty("MODULE_CREW_QUARTERS_I")]
        ModuleCrewQuartersI,
        [JsonProperty("MODULE_ENVOY_QUARTERS_I")]
        ModuleEnvoyQuartersI,
        [JsonProperty("MODULE_PASSENGER_CABIN_I")]
        ModulePassengerCabinI,
        [JsonProperty("MODULE_MICRO_REFINERY_I")]
        ModuleMicroRefineryI,
        [JsonProperty("MODULE_SCIENCE_LAB_I")]
        ModuleScienceLabI,
        [JsonProperty("MODULE_JUMP_DRIVE_I")]
        ModuleJumpDriveI,
        [JsonProperty("MODULE_JUMP_DRIVE_II")]
        ModuleJumpDriveIi,
        [JsonProperty("MODULE_JUMP_DRIVE_III")]
        ModuleJumpDriveIii,
        [JsonProperty("MODULE_WARP_DRIVE_I")]
        ModuleWarpDriveI,
        [JsonProperty("MODULE_WARP_DRIVE_II")]
        ModuleWarpDriveIi,
        [JsonProperty("MODULE_WARP_DRIVE_III")]
        ModuleWarpDriveIii,
        [JsonProperty("MODULE_SHIELD_GENERATOR_I")]
        ModuleShieldGeneratorI,
        [JsonProperty("MODULE_SHIELD_GENERATOR_II")]
        ModuleShieldGeneratorIi,
        [JsonProperty("MODULE_ORE_REFINERY_I")]
        ModuleOreRefineryI,
        [JsonProperty("MODULE_FUEL_REFINERY_I")]
        ModuleFuelRefineryI,
        [JsonProperty("MOUNT_GAS_SIPHON_I")]
        MountGasSiphonI,
        [JsonProperty("MOUNT_GAS_SIPHON_II")]
        MountGasSiphonIi,
        [JsonProperty("MOUNT_GAS_SIPHON_III")]
        MountGasSiphonIii,
        [JsonProperty("MOUNT_SURVEYOR_I")]
        MountSurveyorI,
        [JsonProperty("MOUNT_SURVEYOR_II")]
        MountSurveyorIi,
        [JsonProperty("MOUNT_SURVEYOR_III")]
        MountSurveyorIii,
        [JsonProperty("MOUNT_SENSOR_ARRAY_I")]
        MountSensorArrayI,
        [JsonProperty("MOUNT_SENSOR_ARRAY_II")]
        MountSensorArrayIi,
        [JsonProperty("MOUNT_SENSOR_ARRAY_III")]
        MountSensorArrayIii,
        [JsonProperty("MOUNT_MINING_LASER_I")]
        MountMiningLaserI,
        [JsonProperty("MOUNT_MINING_LASER_II")]
        MountMiningLaserIi,
        [JsonProperty("MOUNT_MINING_LASER_III")]
        MountMiningLaserIii,
        [JsonProperty("MOUNT_LASER_CANNON_I")]
        MountLaserCannonI,
        [JsonProperty("MOUNT_MISSILE_LAUNCHER_I")]
        MountMissileLauncherI,
        [JsonProperty("MOUNT_TURRET_I")]
        MountTurretI,
        [JsonProperty("SHIP_PROBE")]
        ShipProbe,
        [JsonProperty("SHIP_MINING_DRONE")]
        ShipMiningDrone,
        [JsonProperty("SHIP_SIPHON_DRONE")]
        ShipSiphonDrone,
        [JsonProperty("SHIP_INTERCEPTOR")]
        ShipInterceptor,
        [JsonProperty("SHIP_LIGHT_HAULER")]
        ShipLightHauler,
        [JsonProperty("SHIP_COMMAND_FRIGATE")]
        ShipCommandFrigate,
        [JsonProperty("SHIP_EXPLORER")]
        ShipExplorer,
        [JsonProperty("SHIP_HEAVY_FREIGHTER")]
        ShipHeavyFreighter,
        [JsonProperty("SHIP_LIGHT_SHUTTLE")]
        ShipLightShuttle,
        [JsonProperty("SHIP_ORE_HOUND")]
        ShipOreHound,
        [JsonProperty("SHIP_REFINING_FREIGHTER")]
        ShipRefiningFreighter,
        [JsonProperty("SHIP_SURVEYOR")]
        ShipSurveyor,
    }

    public static class TradeSymbolJsonTradeSymbolJsonExtension
    {
        public static string Value(this TradeSymbolJsonTradeSymbolJson value)
        {
            return ((JsonPropertyAttribute)value.GetType().GetMember(value.ToString())[0].GetCustomAttributes(typeof(JsonPropertyAttribute), false)[0]).PropertyName ?? value.ToString();
        }

        public static TradeSymbolJsonTradeSymbolJson ToEnum(this string value)
        {
            foreach(var field in typeof(TradeSymbolJsonTradeSymbolJson).GetFields())
            {
                var attributes = field.GetCustomAttributes(typeof(JsonPropertyAttribute), false);
                if (attributes.Length == 0)
                {
                    continue;
                }

                var attribute = attributes[0] as JsonPropertyAttribute;
                if (attribute != null && attribute.PropertyName == value)
                {
                    return (TradeSymbolJsonTradeSymbolJson)field.GetValue(null);
                }
            }

            throw new Exception($"Unknown value {value} for enum TradeSymbolJsonTradeSymbolJson");
        }
    }

}