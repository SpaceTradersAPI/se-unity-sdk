
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Openapi.Models.Components
{
    using Newtonsoft.Json;
    using System;
    using UnityEngine;
    
    /// <summary>
    /// The type of waypoint.
    /// </summary>
    public enum WaypointTypeJsonWaypointTypeJson
    {
        [JsonProperty("PLANET")]
        Planet,
        [JsonProperty("GAS_GIANT")]
        GasGiant,
        [JsonProperty("MOON")]
        Moon,
        [JsonProperty("ORBITAL_STATION")]
        OrbitalStation,
        [JsonProperty("JUMP_GATE")]
        JumpGate,
        [JsonProperty("ASTEROID_FIELD")]
        AsteroidField,
        [JsonProperty("ASTEROID")]
        Asteroid,
        [JsonProperty("ENGINEERED_ASTEROID")]
        EngineeredAsteroid,
        [JsonProperty("ASTEROID_BASE")]
        AsteroidBase,
        [JsonProperty("NEBULA")]
        Nebula,
        [JsonProperty("DEBRIS_FIELD")]
        DebrisField,
        [JsonProperty("GRAVITY_WELL")]
        GravityWell,
        [JsonProperty("ARTIFICIAL_GRAVITY_WELL")]
        ArtificialGravityWell,
        [JsonProperty("FUEL_STATION")]
        FuelStation,
    }

    public static class WaypointTypeJsonWaypointTypeJsonExtension
    {
        public static string Value(this WaypointTypeJsonWaypointTypeJson value)
        {
            return ((JsonPropertyAttribute)value.GetType().GetMember(value.ToString())[0].GetCustomAttributes(typeof(JsonPropertyAttribute), false)[0]).PropertyName ?? value.ToString();
        }

        public static WaypointTypeJsonWaypointTypeJson ToEnum(this string value)
        {
            foreach(var field in typeof(WaypointTypeJsonWaypointTypeJson).GetFields())
            {
                var attributes = field.GetCustomAttributes(typeof(JsonPropertyAttribute), false);
                if (attributes.Length == 0)
                {
                    continue;
                }

                var attribute = attributes[0] as JsonPropertyAttribute;
                if (attribute != null && attribute.PropertyName == value)
                {
                    return (WaypointTypeJsonWaypointTypeJson)field.GetValue(null);
                }
            }

            throw new Exception($"Unknown value {value} for enum WaypointTypeJsonWaypointTypeJson");
        }
    }

}